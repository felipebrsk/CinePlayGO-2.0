name: Laravel Dusk

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches:
      - "*"
  push:
    branches:
      - main

env:
  DB_DATABASE: dusk
  DB_CONNECTION: mysql
  DB_PORT: 3306
  DB_USERNAME: root
  DB_PASSWORD: root
  APP_URL: "http://localhost:8000"
  APP_ENV: testing

jobs:
  dusk-php:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ env.DB_DATABASE }}
          mysql root password: ${{ env.DB_PASSWORD }}
          mysql user: ${{ env.DB_USERNAME }}
          mysql password: ${{ env.DB_PASSWORD }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, gd, intl, mysqli, pdo_mysql

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Cache composer.lock
        uses: actions/cache@v4
        id: composer-cache
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          path: vendor

      - name: Cache package.lock
        uses: actions/cache@v4
        id: package-cache
        with:
          key: ${{ runner.os }}-package-${{ hashFiles('package-lock.json') }}
          path: node_modules

      - name: Install Laravel dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install npm dependencies
        if: steps.package-cache.outputs.cache-hit != 'true'
        run: npm i

      - name: Copy .env.dusk
        run: php -r "file_exists('.env') || copy('.env.dusk', '.env');"

      - name: Start Chrome Driver
        run: php artisan dusk:chrome-driver

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

      - name: Start Laravel server
        run: php artisan serve --host=127.0.0.1 --port=8000 --no-reload > /dev/null 2>&1 &
        env:
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          APP_URL: ${{ env.APP_URL }}
          APP_ENV: ${{ env.APP_ENV }}

      - name: Wait for Laravel server to be ready
        run: |
          echo "Waiting for Laravel server to start..."
          while ! curl -s ${{ env.APP_URL }} > /dev/null; do
            sleep 1
          done
          echo "Laravel server is up and running!"

      - name: Run Dusk tests
        run: |
          chmod -R 0755 vendor/laravel/dusk/bin/
          php artisan dusk
        env:
          APP_ENV: ${{ env.APP_ENV }}
          APP_URL: ${{ env.APP_URL }}
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console

      - name: Capture Laravel logs
        if: failure()
        run: cat storage/logs/laravel.log
